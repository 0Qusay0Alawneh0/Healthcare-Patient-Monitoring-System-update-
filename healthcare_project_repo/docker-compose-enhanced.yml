version: '3.8'

services:
  # Document Database: MongoDB for patient information
  mongodb-primary:
    image: mongo:latest
    container_name: mongodb-primary
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27017"]
    ports:
      - "27017:27017"
    volumes:
      - ./mongodb_data/primary:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
    networks:
      - healthcare-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

  mongodb-secondary-1:
    image: mongo:latest
    container_name: mongodb-secondary-1
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27017"]
    ports:
      - "27018:27017"
    volumes:
      - ./mongodb_data/secondary1:/data/db
    depends_on:
      - mongodb-primary
    networks:
      - healthcare-network

  mongodb-secondary-2:
    image: mongo:latest
    container_name: mongodb-secondary-2
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27017"]
    ports:
      - "27019:27017"
    volumes:
      - ./mongodb_data/secondary2:/data/db
    depends_on:
      - mongodb-primary
    networks:
      - healthcare-network

  mongodb-setup:
    image: mongo:latest
    container_name: mongodb-setup
    depends_on:
      - mongodb-primary
      - mongodb-secondary-1
      - mongodb-secondary-2
    networks:
      - healthcare-network
    volumes:
      - ./scripts:/scripts
    entrypoint: ["bash", "/scripts/mongodb_setup.sh"]

  # Time-Series Database: InfluxDB for vital signs
  influxdb-1:
    image: influxdb:1.8
    container_name: influxdb-1
    ports:
      - "8086:8086"
    environment:
      - INFLUXDB_DB=health
      - INFLUXDB_HTTP_AUTH_ENABLED=true
      - INFLUXDB_ADMIN_USER=admin
      - INFLUXDB_ADMIN_PASSWORD=adminpass
      - INFLUXDB_USER=healthuser
      - INFLUXDB_USER_PASSWORD=healthpass
      - INFLUXDB_REPORTING_DISABLED=true
    volumes:
      - ./influxdb_data/node1:/var/lib/influxdb
    networks:
      - healthcare-network

  influxdb-2:
    image: influxdb:1.8
    container_name: influxdb-2
    ports:
      - "8087:8086"
    environment:
      - INFLUXDB_DB=health
      - INFLUXDB_HTTP_AUTH_ENABLED=true
      - INFLUXDB_ADMIN_USER=admin
      - INFLUXDB_ADMIN_PASSWORD=adminpass
      - INFLUXDB_USER=healthuser
      - INFLUXDB_USER_PASSWORD=healthpass
      - INFLUXDB_REPORTING_DISABLED=true
    volumes:
      - ./influxdb_data/node2:/var/lib/influxdb
    networks:
      - healthcare-network

  influxdb-3:
    image: influxdb:1.8
    container_name: influxdb-3
    ports:
      - "8088:8086"
    environment:
      - INFLUXDB_DB=health
      - INFLUXDB_HTTP_AUTH_ENABLED=true
      - INFLUXDB_ADMIN_USER=admin
      - INFLUXDB_ADMIN_PASSWORD=adminpass
      - INFLUXDB_USER=healthuser
      - INFLUXDB_USER_PASSWORD=healthpass
      - INFLUXDB_REPORTING_DISABLED=true
    volumes:
      - ./influxdb_data/node3:/var/lib/influxdb
    networks:
      - healthcare-network

  # Graph Database: Neo4j for doctor-patient relationships
  neo4j-core1:
    image: neo4j:4.4
    container_name: neo4j-core1
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      - NEO4J_AUTH=neo4j/password
      - NEO4J_dbms_mode=CORE
      - NEO4J_causal__clustering_minimum__core__cluster__size__at__formation=3
      - NEO4J_causal__clustering_minimum__core__cluster__size__at__runtime=3
      - NEO4J_causal__clustering_initial__discovery__members=neo4j-core1:5000,neo4j-core2:5000,neo4j-core3:5000
      - NEO4J_dbms_connector_bolt_advertised__address=neo4j-core1:7687
      - NEO4J_causal__clustering_discovery__advertised__address=neo4j-core1:5000
      - NEO4J_causal__clustering_transaction__advertised__address=neo4j-core1:6000
      - NEO4J_causal__clustering_raft__advertised__address=neo4j-core1:7000
    volumes:
      - ./neo4j_data/core1:/data
    networks:
      - healthcare-network

  neo4j-core2:
    image: neo4j:4.4
    container_name: neo4j-core2
    ports:
      - "7475:7474"
      - "7688:7687"
    environment:
      - NEO4J_AUTH=neo4j/password
      - NEO4J_dbms_mode=CORE
      - NEO4J_causal__clustering_minimum__core__cluster__size__at__formation=3
      - NEO4J_causal__clustering_minimum__core__cluster__size__at__runtime=3
      - NEO4J_causal__clustering_initial__discovery__members=neo4j-core1:5000,neo4j-core2:5000,neo4j-core3:5000
      - NEO4J_dbms_connector_bolt_advertised__address=neo4j-core2:7687
      - NEO4J_causal__clustering_discovery__advertised__address=neo4j-core2:5000
      - NEO4J_causal__clustering_transaction__advertised__address=neo4j-core2:6000
      - NEO4J_causal__clustering_raft__advertised__address=neo4j-core2:7000
    volumes:
      - ./neo4j_data/core2:/data
    networks:
      - healthcare-network

  neo4j-core3:
    image: neo4j:4.4
    container_name: neo4j-core3
    ports:
      - "7476:7474"
      - "7689:7687"
    environment:
      - NEO4J_AUTH=neo4j/password
      - NEO4J_dbms_mode=CORE
      - NEO4J_causal__clustering_minimum__core__cluster__size__at__formation=3
      - NEO4J_causal__clustering_minimum__core__cluster__size__at__runtime=3
      - NEO4J_causal__clustering_initial__discovery__members=neo4j-core1:5000,neo4j-core2:5000,neo4j-core3:5000
      - NEO4J_dbms_connector_bolt_advertised__address=neo4j-core3:7687
      - NEO4J_causal__clustering_discovery__advertised__address=neo4j-core3:5000
      - NEO4J_causal__clustering_transaction__advertised__address=neo4j-core3:6000
      - NEO4J_causal__clustering_raft__advertised__address=neo4j-core3:7000
    volumes:
      - ./neo4j_data/core3:/data
    networks:
      - healthcare-network

  # Column-Family Database: Cassandra for analytics
  cassandra-node1:
    image: cassandra:3.11
    container_name: cassandra-node1
    ports:
      - "9042:9042"
    environment:
      - CASSANDRA_CLUSTER_NAME=HealthcareCluster
      - CASSANDRA_DC=DC1
      - CASSANDRA_RACK=RACK1
      - CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch
    volumes:
      - ./cassandra_data/node1:/var/lib/cassandra
    networks:
      - healthcare-network
    healthcheck:
      test: ["CMD", "cqlsh", "-u cassandra", "-p cassandra", "-e", "describe keyspaces"]
      interval: 15s
      timeout: 10s
      retries: 10

  cassandra-node2:
    image: cassandra:3.11
    container_name: cassandra-node2
    ports:
      - "9043:9042"
    environment:
      - CASSANDRA_CLUSTER_NAME=HealthcareCluster
      - CASSANDRA_DC=DC1
      - CASSANDRA_RACK=RACK2
      - CASSANDRA_SEEDS=cassandra-node1
      - CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch
    volumes:
      - ./cassandra_data/node2:/var/lib/cassandra
    depends_on:
      - cassandra-node1
    networks:
      - healthcare-network

  cassandra-node3:
    image: cassandra:3.11
    container_name: cassandra-node3
    ports:
      - "9044:9042"
    environment:
      - CASSANDRA_CLUSTER_NAME=HealthcareCluster
      - CASSANDRA_DC=DC2
      - CASSANDRA_RACK=RACK1
      - CASSANDRA_SEEDS=cassandra-node1
      - CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch
    volumes:
      - ./cassandra_data/node3:/var/lib/cassandra
    depends_on:
      - cassandra-node1
    networks:
      - healthcare-network

  # Key-Value Database: Redis for alerts and caching
  redis-master:
    image: redis:6
    container_name: redis-master
    ports:
      - "6379:6379"
    volumes:
      - ./redis_data/master:/data
      - ./redis/redis-master.conf:/usr/local/etc/redis/redis.conf
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    networks:
      - healthcare-network

  redis-replica1:
    image: redis:6
    container_name: redis-replica1
    ports:
      - "6380:6379"
    volumes:
      - ./redis_data/replica1:/data
      - ./redis/redis-replica1.conf:/usr/local/etc/redis/redis.conf
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    depends_on:
      - redis-master
    networks:
      - healthcare-network

  redis-replica2:
    image: redis:6
    container_name: redis-replica2
    ports:
      - "6381:6379"
    volumes:
      - ./redis_data/replica2:/data
      - ./redis/redis-replica2.conf:/usr/local/etc/redis/redis.conf
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    depends_on:
      - redis-master
    networks:
      - healthcare-network

  redis-sentinel1:
    image: redis:6
    container_name: redis-sentinel1
    ports:
      - "26379:26379"
    volumes:
      - ./redis/sentinel1.conf:/usr/local/etc/redis/sentinel.conf
    command: ["redis-sentinel", "/usr/local/etc/redis/sentinel.conf"]
    depends_on:
      - redis-master
      - redis-replica1
      - redis-replica2
    networks:
      - healthcare-network

  redis-sentinel2:
    image: redis:6
    container_name: redis-sentinel2
    ports:
      - "26380:26379"
    volumes:
      - ./redis/sentinel2.conf:/usr/local/etc/redis/sentinel.conf
    command: ["redis-sentinel", "/usr/local/etc/redis/sentinel.conf"]
    depends_on:
      - redis-master
      - redis-replica1
      - redis-replica2
    networks:
      - healthcare-network

  redis-sentinel3:
    image: redis:6
    container_name: redis-sentinel3
    ports:
      - "26381:26379"
    volumes:
      - ./redis/sentinel3.conf:/usr/local/etc/redis/sentinel.conf
    command: ["redis-sentinel", "/usr/local/etc/redis/sentinel.conf"]
    depends_on:
      - redis-master
      - redis-replica1
      - redis-replica2
    networks:
      - healthcare-network

  # API and Demo Application
  healthcare-api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: healthcare-api
    ports:
      - "5000:5000"
    depends_on:
      - mongodb-primary
      - influxdb-1
      - neo4j-core1
      - cassandra-node1
      - redis-master
    networks:
      - healthcare-network
    volumes:
      - ./api:/app
    environment:
      - MONGODB_URI=mongodb://admin:password@mongodb-primary:27017/?replicaSet=rs0
      - INFLUXDB_HOST=influxdb-1
      - INFLUXDB_PORT=8086
      - INFLUXDB_USER=admin
      - INFLUXDB_PASSWORD=adminpass
      - INFLUXDB_DB=health
      - NEO4J_URI=bolt://neo4j-core1:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password
      - CASSANDRA_CONTACT_POINTS=cassandra-node1
      - CASSANDRA_PORT=9042
      - CASSANDRA_KEYSPACE=patient_analytics
      - REDIS_HOST=redis-master
      - REDIS_PORT=6379

networks:
  healthcare-network:
    driver: bridge
